curve(g, lty=2, add = T, col="blue", lwd=2)
curve(g, lty=4, add = T, col="blue", lwd=2)
curve(g, lty=3, add = T, col="blue", lwd=2)
curve(g, lty=30, add = T, col="blue", lwd=2)
curve(g, lty=100, add = T, col="blue", lwd=2)
curve(g, lty=2, add = T, col="blue", lwd=2)
plot(f, 0, 2 * pi, col = "red", lwd=2, ylab = "")
curve(g, lty=20, add = T, col="blue", lwd=2)
plot(f, 0, 2 * pi, col = "red", lwd=2, ylab = "")
curve(g, lty=200, add = T, col="blue", lwd=2)
plot(f, 0, 2 * pi, col = "red", lwd=2, ylab = "")
g <- function(x) exp(-x) * sin(x)
curve(g, lty=2, add = T, col="blue", lwd=2)
legend(4, #x座標
1, #y座標
legend(c(expression(e^{-x}*cos(x), expression(e^{-x}*sin(x))))),
lty=c(1,2) lwd = 2, col=c("red", "blue"),
legend(4, #x座標
1, #y座標
legend(c(expression(e^{-x}*cos(x), expression(e^{-x}*sin(x))))),
lty=c(1,2), lwd = 2, col=c("red", "blue"),
bty="n")
legend(c(expression(e^{-x}*cos(x), expression(e^{-x}*sin(x)))),
1, #y座標
lty=c(1,2), lwd = 2, col=c("red", "blue"),
)
source("~/r_practice/practice-4.R")
# 判例をつけたい
f <- function(x) exp(-x) * cos(x)
plot(f, 0, 2 * pi, col = "red", lwd=2, ylab = "")
g <- function(x) exp(-x) * sin(x)
curve(g, lty=2, add = T, col="blue", lwd=2)
legend(4, #x座標
1, #y座標
legend(c(expression(e^{-x}*cos(x), expression(e^{-x}*sin(x))))),
lty=c(1,2), lwd = 2, col=c("red", "blue"),
bty="n")
legend(4, #x座標
1, #y座標
legend(c("a", "b")),
lty=c(1,2), lwd = 2, col=c("red", "blue"),
bty="n")
expression(e^{-x}*cos(x), expression(e^{-x}*sin(x)))
legend(4, #x座標
1, #y座標
legend(c(expression(e^{-x}*cos(x), expression(e^{-x}*sin(x))))),
lty=c(1,2), lwd = 2, col=c("red", "blue"),
bty="n")
legend(4, #x座標
1, #y座標
legend = c(expression(e^{-x}*cos(x), expression(e^{-x}*sin(x)))),
lty=c(1,2), lwd = 2, col=c("red", "blue"),
bty="n")
# 判例をつけたい
f <- function(x) exp(-x) * cos(x)
plot(f, 0, 2 * pi, col = "red", lwd=2, ylab = "")
g <- function(x) exp(-x) * sin(x)
curve(g, lty=2, add = T, col="blue", lwd=2)
legend(4, #x座標
1, #y座標
legend = c(expression(e^{-x}*cos(x), expression(e^{-x}*sin(x)))),
lty=c(1,2), lwd = 2, col=c("red", "blue"),
bty="n")
legend(4, #x座標
1, #y座標
legend = c(expression(e^{-x}*cos(x)), expression(e^{-x}*sin(x))),
lty=c(1,2), lwd = 2, col=c("red", "blue"),
bty="n")
plot(f, 0, 2 * pi, col = "red", lwd=2, ylab = "")
g <- function(x) exp(-x) * sin(x)
curve(g, lty=2, add = T, col="blue", lwd=2)
legend(4, #x座標
1, #y座標
legend = c(expression(e^{-x}*cos(x)), expression(e^{-x}*sin(x))),
lty=c(1,2), lwd = 2, col=c("red", "blue"),
bty="n")
legend(4, #x座標
1, #y座標
legend = c(expression(e^{-x}*cos(x)), expression(e^{-x}*sin(x))),
lty=c(1,2), lwd = 2, col=c("red", "blue"),
bty="n", y.intersp = 2)
plot(f, 0, 2 * pi, col = "red", lwd=2, ylab = "")
g <- function(x) exp(-x) * sin(x)
curve(g, lty=2, add = T, col="blue", lwd=2)
legend(4, #x座標
1, #y座標
legend = c(expression(e^{-x}*cos(x)), expression(e^{-x}*sin(x))),
lty=c(1,2), lwd = 2, col=c("red", "blue"),
bty="n", y.intersp = 2)
legend(4, #x座標
legend(4, #x座標
# 判例をつけたい
f <- function(x) exp(-x) * cos(x)
plot(f, 0, 2 * pi, col = "red", lwd=2, ylab = "")
g <- function(x) exp(-x) * sin(x)
curve(g, lty=2, add = T, col="blue", lwd=2)
legend(4, #x座標
legend(4, #x座標
1, #y座標
legend = c(expression(e^{-x}*cos(x)), expression(e^{-x}*sin(x))),
lty=c(1,2), lwd = 2, col=c("red", "blue"),
bty="n", # 凡例の枠線
y.intersp = 2 #凡例の間
)
legend(4, #x座標
# 判例をつけたい
f <- function(x) exp(-x) * cos(x)
plot(f, 0, 2 * pi, col = "red", lwd=2, ylab = "")
g <- function(x) exp(-x) * sin(x)
curve(g, lty=2, add = T, col="blue", lwd=2)
legend(4, #x座標
1, #y座標
legend = c(expression(e^{-x}*cos(x)), expression(e^{-x}*sin(x))),
lty=c(1,2), lwd = 2, col=c("red", "blue"),
bty="n", # 凡例の枠線
y.intersp = 1.5 #凡例の間
)
kion
kikou <- read.csv("kikou2016.csv")
kikou
kikou
source("~/r_practice/practice-5.R")
kikou <- read.csv("kikou2016.csv", fileEncoding = "sjis")
kikou
kikou <- read.csv("kikou2016.csv", fileEncoding = "sjis")
kikou
getwd()
view(kikou)
View(kikou)
(x <- aggregate(kikou[, -c(1,2)], by=list(月 = kikou$月, FUN="mean")))
(x <- aggregate(kikou[, -c(1,2)], by=list(月 = kikou$月) FUN="mean"))
(x <- aggregate(kikou[, -c(1,2)], by=list(月 = kikou$月), FUN="mean"))
plot(x$気温, type="b", lwd=3, col="green", ylim(0,10))
plot(x$気温, type="b", lwd=3, col="green", ylim(0:10))
plot(x$気温, type="b", lwd=3, col="green", ylim=(0:10))
plot(x$気温, type="b", lwd=3, col="green", ylim=c(0:10))
plot(x$気温, type="b", lwd=3, col="green")
plot(x$気温, type="b", lwd=3, col="green", ylim=c(0, max(x$気温)))
plot(x$気温, type="b", lwd=3, col="green", ylim=c(0, max(x$気温)),
xlab="月", main="2016年気象データ", axes = F)
# 日本語の描画
# par()を利用してフォントファミリーを指定する
par(family = "Hiraginosans-w4a")
plot(x$気温, type="b", lwd=3, col="green", ylim=c(0, max(x$気温)),
xlab="月", main="2016年気象データ", axes = F)
plot(x$気温, type="b", lwd=3, col="green", ylim=c(0, max(x$気温)),
xlab="月", main="2016年気象データ", axes = F)
plot(x$気温, type="b", lwd=3, col="green", ylim=c(0, max(x$気温)),
xlab="月", main="2016年気象データ")
# 判例をつけたい
f <- function(x) exp(-x) * cos(x)
plot(f, 0, 2 * pi, col = "red", lwd=2, ylab = "")
g <- function(x) exp(-x) * sin(x)
curve(g, lty=2, add = T, col="blue", lwd=2)
legend(4, #x座標
1, #y座標
legend = c(expression(e^{-x}*cos(x)), expression(e^{-x}*sin(x))),
lty=c(1,2), lwd = 2, col=c("red", "blue"),
bty="n", # 凡例の枠線
y.intersp = 1.5 #凡例の間
)
# 書き出し
(mydata <- subset(airquality, Ozone > 90, select = -Temp))
dim(mydata)
write.csv(mydata, file = "mydata.csv")
# 読み込み
(newdata <- read.csv(file = "mydata.csv", header = T, row.names = 1))
dim(newdata)
(kikou <- read.csv(file = "kikou2016.csv", fileEncoding = "sjis"))
(str(kikou))
subset(kikou, 月 == 2 & 日 == 29) # 閏日の確認
dim(kikou)
colnames(kikou)
(mydata1 <- subset(airquality, Temp>95, select=-Ozone))
(mydata2 <- subset(airquality, Temp<60, select=-Ozone))
dim(mydata1)
dim(mydata2)
save(mydata1, mydata2, file="mydata.rdata") # 書き出し
load("mydata.rdata")
mydata1 # 保存時と同じ変数名で展開される
mydata2
# データの整理
(sum(1:100))
kikou <- read.csv("kikou2016.csv", fileEncoding = "sjis")
kion <- kikou$気温
mean(kion)
max(kion)
min(kion)
which.max(kion) # いつが最大か
kikou[222,]
x <- matrix(1:100, 4,25)
sum(x) # 全成分を合計する
rowSums(x) # 行ごと
apply(x, 1, "sum") # 行ごと
kikou <- read.csv("kikou2016.csv", fileEncoding = "sjis")
x <- subset(kikou, select = -c(月, 日))
colMeans(x)
apply(x,2,"max") # 列ごとの合計
sapply(x,"max") # 上と同義
apply(x, 2, "min") # 列ごとの合計
# 自作関数でapply
apply(x, 1, function(x) sum(x > mean(x)))
# いくつかのグループ（月毎など）に分けて、統計量を算出する
aggregate(kikou[, -(1:2)], # 月日を除く
by=list(月 = kikou$月), # 月で集約
FUN = "mean") # 平均
aggregate( . ~ 月, data = subset(kikou, select = -日), FUN = "mean") # 同義。フォーミュラ形式
aggregate(kikou[, -(1:2)], # 月日を除く
by=list(月 = kikou$月, 降水のうむ = (kikou$降水量 > 0)), # 月と降水量で集約
FUN = "mean") # 平均
# 演習
# 月日以外の変数ごとに、最大最小を求めよ
# 月毎の平均最大値を求めよ
x <- subset(airquality, select = -c(Month, Day))
colMeans(x)
colSums(x)
?colMeans
colMeans(x, na.rm=T)
colSums(x, na.rm = T)
apply(x, 2, "max")
apply(x, 2, "max", na.rm = T) # applyの後ろには引用する関数の引数を指定できる
apply(x, 2, "min", na.rm = T) # applyの後ろには引用する関数の引数を指定できる
m <- subset(airquality, select = Month)
(x)
aggregate(x, by = m, "mean", na.rm = T) # ??? by = mについて確認
aggregate(x, by = m, "max", na.rm = T)
aggregate(x, by = m, "min", na.rm = T)
plot(1:10)
plot((1:10)^4)
x <- seq(0, 4*pi, by=0.1)
y <- sin(x) + rep_len(c(-0.2, 0.1), length(x))
plot(sin, 0, 4*pi,
col="blue",
lwd=2,
ylab = "sin/cos")
# 日本語の描画
# par()を利用してフォントファミリーを指定する
par(family = "HiraginoSans-w4")
plot(x$気温, type="b", lwd=3, col="green", ylim=c(0, max(x$気温)),
xlab="月", main="2016年気象データ")
# 日本語の描画
# par()を利用してフォントファミリーを指定する
par(family = "HiraginoSans-W4")
plot(x$気温, type="b", lwd=3, col="green", ylim=c(0, max(x$気温)),
xlab="月", main="2016年気象データ")
# 日本語の描画
# par()を利用してフォントファミリーを指定する
par(family = "HiraginoSans-W4")
kikou <- read.csv("kikou2016.csv", fileEncoding = "sjis")
kikou
View(kikou)
getwd()
(x <- aggregate(kikou[, -c(1,2)], by=list(月 = kikou$月), FUN="mean"))
plot(x$気温, type="b", lwd=3, col="green", ylim=c(0, max(x$気温)),
xlab="月", main="2016年気象データ")
plot(x$気温, type="b", lwd=3, col="green", ylim=c(0, max(x$気温)),
xlab="月", main="2016年気象データ", ylab="")
# 日本語の描画
# par()を利用してフォントファミリーを指定する
par(family = "HiraginoSans-W8")
plot(x$気温, type="b", lwd=3, col="green", ylim=c(0, max(x$気温)),
xlab="月", main="2016年気象データ", ylab="")
# 日本語の描画
# par()を利用してフォントファミリーを指定する
par(family = "HiraginoSans-W3")
kikou <- read.csv("kikou2016.csv", fileEncoding = "sjis")
kikou
View(kikou)
getwd()
(x <- aggregate(kikou[, -c(1,2)], by=list(月 = kikou$月), FUN="mean"))
plot(x$気温, type="b", lwd=3, col="green", ylim=c(0, max(x$気温)),
xlab="月", main="2016年気象データ", ylab="")
plot(x$気温, type="b", lwd=3, col="green", ylim=c(0, max(x$気温)),
xlab="月", main="2016年気象データ", ylab="", axes = F)
axis(1,1:12,1:12)
axis(2)
axis(2) # y軸
lines(x$降水量, type="n", lwd=3, col="blue")
lines(x$降水量, type="h", lwd=3, col="blue")
lines(x$日射量, lwd=3,lty=2,col="red")
abline(0,0,led=2, lty="dotted")
legend(1,25,c('気温', "降水量", "日射量"),col=c("green", "blue", "red"), lwd=2)
legend(1,25,c('気温', "降水量", "日射量"),col=c("green", "blue", "red"), lwd=2,lty=c(1,1,2))
# ヒストグラム
hist(kikou$気温)
hist(kikou$気温,
xlab="",ylab="")
hist(kikou$気温,
xlab="",ylab="",
breaks = 25)
hist(kikou$気温,
xlab="",ylab="",
breaks = 25, # ピンの数
col="green")
hist(kikou$気温,
xlab="",ylab="",
breaks = 25, # ピンの数
col="green", main="2016年気温ヒストグラム")
hist(kikou$風速, freq = F, # 全体に対する割合で表示
xlab="")
hist(kikou$風速, freq = F, # 全体に対する割合で表示
xlab="", ylab="密度", breaks = 25)
hist(kikou$風速, freq = F, # 全体に対する割合で表示
xlab="", ylab="密度", breaks = 25, col="lightblue")
hist(kikou$風速, freq = F, # 全体に対する割合で表示
xlab="", ylab="密度", breaks = 25, col="lightblue",
border="lightblue")
hist(kikou$風速, freq = F, # 全体に対する割合で表示
xlab="", ylab="密度", breaks = 25, col="lightblue",
border="lightblue", #境界の色
main="2016年風速非卒グラム")
hist(kikou$風速, freq = T, # 全体に対する割合で表示
xlab="", ylab="密度", breaks = 25, col="lightblue",
border="lightblue", #境界の色
main="2016年風速非卒グラム")
F
hist(kikou$風速, freq = T, # 全体に対する割合で表示
xlab="", ylab="密度", breaks = 25, col="lightblue",
border="lightblue", #境界の色
main="2016年風速非卒グラム")
hist(kikou$風速, freq = T, # 全体に対する割合で表示
xlab="", ylab="密度", breaks = 25, col="lightblue",
border="lightblue", #境界の色
main="2016年風速非卒グラム")
hist(kikou$風速, freq = F, # 全体に対する割合で表示
xlab="", ylab="密度", breaks = 25, col="lightblue",
border="lightblue", #境界の色
main="2016年風速非卒グラム")
hist(kikou$風速, freq = F, # 全体に対する割合で表示
xlab="", ylab="密度", breaks = 25, col="lightblue",
border="lightblue", #境界の色
main="2016年風速非卒グラム",
labels=T)
hist(kikou$風速, freq = F, # 全体に対する割合で表示
xlab="", ylab="密度", breaks = 25, col="lightblue",
border="lightblue", #境界の色
main="2016年風速非卒グラム")
hist(kikou$気温,
xlab="",ylab="",
breaks = 25, # ピンの数
col="green", main="2016年気温ヒストグラム",
labels=T)
hist(kikou$風速, freq = F, # 全体に対する割合で表示
xlab="", ylab="密度", breaks = 25, col="lightblue",
border="lightblue", #境界の色
main="2016年風速非卒グラム")
a <- pi
a <- pi
n <- 10000
x <- (1:n) * a
x <- x - floor(x)
hist(x,breaks = 20, col="gray", border="black")
hist(x,breaks = 20, col="gray", border="red")
hist(x,breaks = 20, col="gray", border="gray")
hist(x,breaks = 20, col="gray", border="gray")
hist(x,breaks = 20, col="gray", border="gray",freq=F)
hist(x,breaks = 20, col="gray", border="gray")
# weylの一様分布
a <- pi
f <- function(a,b=20,n=1000,col="gray") {
x <- (1:n) * a
x <- x - floor(x)
hist(x,breaks = b, col=col, border=col)
}
f(100)
f(sin(pi))
f(sqrt(2))
f(sqrt(4))
f(sqrt(5))
f(exp(5))
f(exp(1))
f((1+sqrt(5))/2)
f(-digamma(1))
f(-digamma(1),b=100) # オイラー定数
# 箱ひげ図
boxplot(x)
# 箱ひげ図
boxplot(kikou)
# 箱ひげ図
boxplot(kikou[,-c(1,2)])
boxplot(気温 ~ 月, data=kikou)
boxplot(気温 ~ 月, data=kikou. col="orange", main="月毎の気温")
boxplot(気温 ~ 月, data=kikou. col="orange", main="月毎の気温")
boxplot(気温 ~ 月, data=kikou, col="orange", main="月毎の気温")
boxplot(気温 ~ 月, data=kikou, col="purple", main="月毎の気温")
boxplot(気温 ~ 月, data=kikou, col="orange", main="月毎の気温")
# 箱ひげ図
boxplot(kikou[,-c(1,2)]) # 月日を除く
?boxplot
boxplot(気温 ~ 月, data=kikou, col="purple", main="月毎の気温", horizontal = T)
describe(kikou)
dim(kikou)
str(kikou)
boxplot(気温 ~ 月, data=kikou, col="purple", main="月毎の気温", horizontal = T)
boxplot(気温 ~ 降水量, data=kikou, col="purple", main="月毎の気温", horizontal = T)
boxplot(気温 ~ 風速, data=kikou, col="purple", main="月毎の気温", horizontal = T)
boxplot(気温 ~ 日射量, data=kikou, col="purple", main="月毎の気温", horizontal = T)
boxplot(気温 ~ 降水量, data=kikou, col="purple", main="月毎の気温")
boxplot(気温 ~ 日射量, data=kikou, col="purple", main="月毎の気温")
boxplot(日射量 ~ 日射量, data=kikou, col="purple", main="月毎の気温")
boxplot(日射量 ~ 月, data=kikou, col="purple", main="月毎の気温")
boxplot(気温 ~ 月, data=kikou, col="purple", main="月毎の気温", horizontal = T)
boxplot(降水量 ~ 月, data=kikou, col="purple", main="月毎の気温")
boxplot(日射量 ~ 月, data=kikou, col="purple", main="月毎の気温")
boxplot(日射量 ~ 月, data=kikou, col="purple", main="月毎の日射量")
boxplot(日射量 ~ 月, data=kikou, col="purple", main="月毎の日射量")
boxplot(風速 ~ 月, data=kikou, col="springgreen", main="月毎の日射量")
# 棒グラフ
barplot(x)
# 棒グラフ
barplot(kikou)
# 棒グラフ
barplot(kikou$月)
# 棒グラフ
barplot(kikou$気温)
# 棒グラフ
x <- aggregate(kikou[,-c(1,2)],by=list(月 = kikou$月),FUN="mean")
barplot(x)
barplot(as.matrix(x[,-1]))
barplot(as.matrix(x[,-1]),
col=rainbow(12)[c(8:1,12:9)])
barplot(as.matrix(x[,-1]),
col=rainbow(12)[c(8:1,12:9)],
beside=T)
barplot(as.matrix(x[,-1]),
col=rainbow(12)[c(8:1,12:9)],
beside=T,
space=c(1.5))
barplot(as.matrix(x[,-1]),
col=rainbow(12)[c(8:1,12:9)],
beside=T,
space=c(1.5, 3))
barplot(as.matrix(x[,-1]),
col=rainbow(12)[c(8:1,12:9)],
beside=T,
space=c(1.5, 1))
barplot(as.matrix(x[,-1]),
col=rainbow(12)[c(8:1,12:9)],
beside=T,
space=c(1.5, 0.5))
barplot(as.matrix(x[,-1]),
col=rainbow(12)[c(8:1,12:9)],
beside=T,
space=c(1.5, 3),
legend.text = paste0(z[,1], "月"),
args.legend = list(ncol=2))
barplot(as.matrix(x[,-1]),
col=rainbow(12)[c(8:1,12:9)],
beside=T,
space=c(1.5, 3),
legend.text = paste0(x[,1], "月"),
args.legend = list(ncol=2))
y <- aggreage(kikou[0,-c(1,2)])
y
y <- aggreage(kikou[,-c(1,2)])
y
y <- aggregate(kikou[,-c(1,2)])
y <- aggregate(kikou[,-c(1,2)],by=list(月 = kikou$月), FUN="mean")
y
y <- aggregate(kikou[,-c(月,日)],by=list(月 = kikou$月), FUN="mean")
y <- aggregate(kikou[,-c("月","日")],by=list(月 = kikou$月), FUN="mean")
1
y <- aggregate(kikou[,-c(1,2)],by=list(月 = kikou$月), FUN="mean")
y
barplot(x)
barplot(as.matrix(y))
barplot(as.matrix(y[,-1]))
barplot(as.matrix(y[,-1])
beside=T)
barplot(as.matrix(y[,-1]),
beside=T)
x <- z$count
# 円グラフ
z <- hist(kikou$日射量, breaks = 5,plot=F)
x <- z$count
x
y <- z$breaks
y
names(x) <- paste(y[-length(y)], y=[-1], sep="-")
# 円グラフ
z <- hist(kikou$日射量, breaks = 5,plot=F)
x <- z$count
y <- z$breaks
names(x) <- paste(y[-length(y)], y=[-1], sep="-")
names(x) <- paste(y[-length(y)], y[-1], sep="-")
pie(x, col=gray(seq(0,1,length=length(x))))
pie(x, clockwise = T, col=heat.colors(length(x)), main="tilt")
pie(x, clockwise = T, col=heat.colors(length(x)), main="title")
pairs(kikou[,-c(1,2)])
pairs(kikou[,-c(1,2)], col="blue")
pairs(~気温 + 日射量 + 風速, data = kikou,col=rainbow(12)[kikou$月])
# 3次元グラフ
f <- function(x,y) x~2 - y~2
# 3次元グラフ
f <- function(x,y) x~2 - y^2
x <- seq(-3,3,length=51)
y <- seq(-3,3,length=51)
z <- auter(x,y,f) # 外積を計算する
persp(x,y,z,col="lightblue")
z <- outer(x,y,f) # 外積を計算する
persp(x,y,z,col="lightblue")
# 3次元グラフ
f <- function(x,y) x^2 - y^2
x <- seq(-3,3,length=51)
y <- seq(-3,3,length=51)
z <- outer(x,y,f) # 外積を計算する
persp(x,y,z,col="lightblue")
persp(x,y,z,theta=30)
persp(x,y,z,theta=30,phi=30)
persp(x,y,z,theta=30,phi=30,expand=0.5)
persp(x,y,z,theta=30,phi=30,expand=0.5,col="royalblue")
persp(x,y,z,theta=30,phi=30,expand=0.5,col="royalblue",main=expression(z=x^2-y^2))
